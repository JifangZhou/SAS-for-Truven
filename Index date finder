
*===================================================================================
***At least 2 prescriptions of pain relief medication with >30 days apart***
*===================================================================================;

LIBNAME Myfile 				'C:\Users\jzhou86\Documents\SCD Project';
LIBNAME Rawdata 			'C:\Users\jzhou86\Documents\SCD Project\Raw Data';
LIBNAME Dxpresc 		'C:\Users\jzhou86\Documents\SCD Project\Raw Data\Drug Prescriptions';
LIBNAME InsuRrd 	'C:\Users\jzhou86\Documents\SCD Project\Raw Data\Insurance Records';

*Begin stacking files;
DATA Myfile.Service0913;
	SET Rawdata.pso_2009 Rawdata.pso_2010 Rawdata.pso_2011 Rawdata.pso_2012 Rawdata.pso_2013;
DATA Myfile.Dx0913;
	SET Dxpresc.scd_mdcrd_09 Dxpresc.scd_mdcrd_10 Dxpresc.scd_mdcrd_11 Dxpresc.scd_mdcrd_12 Dxpresc.scd_mdcrd_13
		Dxpresc.scd_d_09 Dxpresc.scd_d_10 Dxpresc.scd_d_11 Dxpresc.scd_d_12 Dxpresc.scd_d_13;
DATA Myfile.Insurance0913_a;
	SET InsuRrd.scd_a_09 InsuRrd.scd_a_10 InsuRrd.scd_a_11 InsuRrd.scd_a_12 InsuRrd.scd_a_13
		InsuRrd.scd_mdcra_09 InsuRrd.scd_mdcra_10 InsuRrd.scd_mdcra_11 InsuRrd.scd_mdcra_12 InsuRrd.scd_mdcra_13;
DATA Myfile.Insurance0913_t;
	SET InsuRrd.scd_t_09 InsuRrd.scd_t_10 InsuRrd.scd_t_11 InsuRrd.scd_t_12 InsuRrd.scd_t_13
		InsuRrd.scd_mdcrt_09 InsuRrd.scd_mdcrt_10 InsuRrd.scd_mdcrt_11 InsuRrd.scd_mdcrt_12 InsuRrd.scd_mdcrt_13;
DATA Druglist;
	SET Myfile.narcotic_ndc;
DATA Drug_Presc0913;
	SET Myfile.Dx0913;
RUN;

PROC PRINT DATA = Myfile.Dx0913 (obs=2);
RUN;

* Extract all transdermal prescriptions;

PROC sql;
	CREATE table Drug_Category_presc0913 as
	SELECT 	*
	FROM Drug_Presc0913 inner join Druglist
	on Drug_Presc0913.NDCNUM = Druglist.NDCNUM;
QUIT;

 * Remove cases without >2 prescriptions that is >30 days apart;

PROC sql;
	CREATE table eligible_pts_enrolid as
	SELECT enrolid,
	max (SVCDATE) as last_svcdate,
	min (SVCDATE) as first_svcdate
	FROM Drug_Category_presc0913
	GROUP BY enrolid;
QUIT;

DATA myfile.Narcoticsuser_enrolid;
	SET eligible_pts_enrolid;
	IF last_svcdate-first_svcdate GT 30;
RUN;

PROC CONTENTS DATA = myfile.Narcoticsuser_enrolid;
RUN;

 * Create a list of unique patients and assess their enrollment status;

DATA combined_enrolid;
	SET myfile.narcoticsuser_enrolid myfile.nsaidsuser_enrolid myfile.patchuser_enrolid;
RUN;

PROC sql;
	CREATE table unique_id_list as
	SELECT min (enrolid) as enrolid
	FROM combined_enrolid
	GROUP BY enrolid;
QUIT;
PROC PRINT DATA=unique_id_list;
RUN;
* NOTE: There were 4087 observations read from the data set WORK.UNIQUE_ID_LIST;

* Check the enrollment status of Narcotic users with the insurance records;
***Merge study cohort with enrollment files***;
PROC SORT DATA=Myfile.Insurance0913_t;
	by enrolid DTSTART ;
RUN;

DATA narcotic0913;
MERGE myfile.narcoticsuser_enrolid (in=a keep=enrolid first_svcdate) Myfile.Insurance0913_t (in=b keep=enrolid DTSTART DTEND MEMDAYS );
by enrolid;
if a=1 and b=1;
run;

proc sort data=narcotic0913; by enrolid first_svcdate ; run;
proc print data= narcotic0913 (firstobs=53000 obs=53100); run;

**Restrict the enroll records 12 months before IBD diagnosis***;

data enroll_prior enroll_post;
set  narcotic0913;
if first_svcdate-390 <= DTSTART < first_svcdate then output enroll_prior;
if first_svcdate < DTSTART <= first_svcdate+390 then output enroll_post;
run;
* NOTE: There were 71365 observations read from the data set WORK.NARCOTIC0913.
NOTE: The data set WORK.ENROLL_PRIOR has 19437 observations and 5 variables.
NOTE: The data set WORK.ENROLL_POST has 51837 observations and 5 variables.;

proc print data=enroll_prior (obs=100); run;
proc print data=enroll_post (obs=100); run;

%MACRO enroll (time, n, index);
**Sum the enrollment days for each id***;
proc summary nway data= enroll_&time.;
var MEMDAYS;
by enrolid;
output out=enroll_&time._sum sum=enroll_day;
run;

/*Check the number of people who do not have enrollment files in the 12 months &time. to drug initiation*/

proc print data=enroll_&time._sum (obs=50); run;
proc univariate data=enroll_&time._sum; var enroll_day; histogram; run;


data enroll_&time._merge;
set enroll_&time._sum;
if 0 <= enroll_day < &n. then &index.=0;
if enroll_day >= &n. then &index.=1;
run;

proc print data=enroll_&time._merge (obs=100); run;

%MEND;

%enroll (prior, 365.25, priorenroll_12m);
%enroll (post, 365.25, postenroll_12m);
